import { 
  signInWithPopup, 
  signOut, 
  onAuthStateChanged, 
  User as FirebaseUser 
} from 'firebase/auth';
import { auth, googleProvider } from './config';
import { userService } from './services';
import { User } from '../types';

// –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ Firebase User –≤ –Ω–∞—à User
const mapFirebaseUser = (firebaseUser: FirebaseUser): User => ({
  id: firebaseUser.uid,
  name: firebaseUser.displayName || '–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á',
  email: firebaseUser.email || '',
  avatar: firebaseUser.photoURL || undefined,
  discount: 0,
  isAdmin: false // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –Ω–µ –∞–¥–º–∏–Ω, –º–æ–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —á–µ—Ä–µ–∑ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
});

// –í—Ö–æ–¥ —á–µ—Ä–µ–∑ Google
export const signInWithGoogle = async (): Promise<User> => {
  try {
    console.log('üîÑ –ù–∞—á–∏–Ω–∞–µ–º –≤—Ö–æ–¥ —á–µ—Ä–µ–∑ Google...');
    console.log('üîß Auth domain:', auth.app.options.authDomain);
    console.log('üîß Project ID:', auth.app.options.projectId);
    
    const result = await signInWithPopup(auth, googleProvider);
    console.log('‚úÖ Google auth —É—Å–ø–µ—à–Ω–æ:', result.user.email);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    const existingUser = await userService.getById(result.user.uid);
    let user;
    
    if (existingUser) {
      // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –æ—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, —Å–æ—Ö—Ä–∞–Ω—è—è –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
      console.log('üë§ –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
      user = {
        ...existingUser,
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–º—è –∏–∑ –±–∞–∑—ã, –∞ Google-–∏–º—è –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ –∫–∞–∫ —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ
        name: existingUser.name || result.user.displayName || '–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á',
        email: result.user.email || existingUser.email,
        avatar: result.user.photoURL || existingUser.avatar
      };
    } else {
      // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ
      console.log('‚ûï –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
      user = mapFirebaseUser(result.user);
    }
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    await userService.createOrUpdate(user);
    console.log('üíæ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
    
    return user;
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—Ö–æ–¥—É —á–µ—Ä–µ–∑ Google:', error);
    console.error('‚ùå –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', error instanceof Error ? error.message : String(error));
    throw error;
  }
};

// –í—ã—Ö–æ–¥
export const signOutUser = async (): Promise<void> => {
  try {
    await signOut(auth);
  } catch (error) {
    console.error('–ü–æ–º–∏–ª–∫–∞ –≤–∏—Ö–æ–¥—É:', error);
    throw error;
  }
};

// –°–ª—É—à–∞—Ç–µ–ª—å –∏–∑–º–µ–Ω–µ–Ω–∏–π —Å–æ—Å—Ç–æ—è–Ω–∏—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
export const onAuthStateChange = (callback: (user: User | null) => void) => {
  return onAuthStateChanged(auth, async (firebaseUser) => {
    if (firebaseUser) {
      console.log('üîê Firebase –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–æ—à–µ–ª:', firebaseUser.email);
      
      // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
      const userData = await userService.getById(firebaseUser.uid);
      if (userData) {
        console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ:', userData.email);
        // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –æ—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, —Å–æ—Ö—Ä–∞–Ω—è—è –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        const updatedUser = {
          ...userData,
          // –ù–µ –∑–∞—Ç–∏—Ä–∞–µ–º –∏–º—è –∏–∑ –±–∞–∑—ã, –∏—Å–ø–æ–ª—å–∑—É–µ–º Google-–∏–º—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤ –±–∞–∑–µ –ø—É—Å—Ç–æ
          name: userData.name || firebaseUser.displayName || '–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á',
          email: firebaseUser.email || userData.email,
          avatar: firebaseUser.photoURL || userData.avatar
        };
        await userService.createOrUpdate(updatedUser);
        callback(updatedUser);
      } else {
        // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –±–∞–∑–µ, —Å–æ–∑–¥–∞–µ–º –µ–≥–æ
        console.log('‚ûï –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ');
        const user = mapFirebaseUser(firebaseUser);
        await userService.createOrUpdate(user);
        callback(user);
      }
    } else {
      console.log('üö™ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã—à–µ–ª');
      callback(null);
    }
  });
};
