import { 
  signInWithPopup, 
  signOut, 
  onAuthStateChanged, 
  User as FirebaseUser 
} from 'firebase/auth';
import { auth, googleProvider } from './config';
import { userService } from './services';
import { User } from '../types';

// –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ Firebase User –≤ –Ω–∞—à User
const mapFirebaseUser = (firebaseUser: FirebaseUser): User => ({
  id: firebaseUser.uid,
  name: firebaseUser.displayName || '–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á',
  email: firebaseUser.email || '',
  avatar: firebaseUser.photoURL || undefined,
  discount: 0,
  isAdmin: false // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –Ω–µ –∞–¥–º–∏–Ω, –º–æ–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —á–µ—Ä–µ–∑ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
});

// –í—Ö–æ–¥ —á–µ—Ä–µ–∑ Google
export const signInWithGoogle = async (): Promise<User> => {
  try {
    const result = await signInWithPopup(auth, googleProvider);
    const user = mapFirebaseUser(result.user);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    await userService.createOrUpdate(user);
    
    return user;
  } catch (error) {
    console.error('–ü–æ–º–∏–ª–∫–∞ –≤—Ö–æ–¥—É —á–µ—Ä–µ–∑ Google:', error);
    throw error;
  }
};

// –í—ã—Ö–æ–¥
export const signOutUser = async (): Promise<void> => {
  try {
    await signOut(auth);
  } catch (error) {
    console.error('–ü–æ–º–∏–ª–∫–∞ –≤–∏—Ö–æ–¥—É:', error);
    throw error;
  }
};

// –°–ª—É—à–∞—Ç–µ–ª—å –∏–∑–º–µ–Ω–µ–Ω–∏–π —Å–æ—Å—Ç–æ—è–Ω–∏—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
export const onAuthStateChange = (callback: (user: User | null) => void) => {
  return onAuthStateChanged(auth, async (firebaseUser) => {
    if (firebaseUser) {
      console.log('üîê Firebase –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–æ—à–µ–ª:', firebaseUser.email);
      
      // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
      const userData = await userService.getById(firebaseUser.uid);
      if (userData) {
        console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ:', userData.email);
        callback(userData);
      } else {
        // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –±–∞–∑–µ, —Å–æ–∑–¥–∞–µ–º –µ–≥–æ
        console.log('‚ûï –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ');
        const user = mapFirebaseUser(firebaseUser);
        await userService.createOrUpdate(user);
        callback(user);
      }
    } else {
      console.log('üö™ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã—à–µ–ª');
      callback(null);
    }
  });
};
